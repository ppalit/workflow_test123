name: Create App Folder from Templates

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: "Enter the name of your app"
        required: true
      environment:
        description: "Select an environment"
        required: true
        type: choice
        options:
          - "dev"
          - "qa"
          - "prod"
      predefined_option:
        description: "Select a predefined option"
        required: true
        type: choice
        options:
          - "Option1"
          - "Option2"
          - "Option3"
      manual_templates:
        description: "Enter additional template files (comma-separated, e.g., ref2.txt,ref3.txt)"
        required: false

permissions:
  contents: write

jobs:
  create-folder:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get GitHub Username
        id: get_username
        run: echo "username=${{ github.actor }}" >> $GITHUB_ENV

      - name: Define Variables
        id: define_vars
        run: |
          APP_NAME="${{ github.event.inputs.app_name }}"
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          APP_PATH="${APP_NAME}/${ENVIRONMENT}"
          BRANCH_NAME="users/${{ env.username }}/${APP_NAME}-${ENVIRONMENT}"

          echo "app_name=$APP_NAME" >> $GITHUB_ENV
          echo "environment=$ENVIRONMENT" >> $GITHUB_ENV
          echo "app_path=$APP_PATH" >> $GITHUB_ENV
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Check if App Exists in Any Environment
        id: check_app
        run: |
          for env in dev qa prod; do
            if [ -d "${{ github.workspace }}/${{ env.app_name }}/$env" ]; then
              echo "🚫 The app '${{ env.app_name }}' already exists in the '$env' environment!"
              echo "app_exists=true" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo "✅ The app does not exist in any environment. Proceeding with creation."
          echo "app_exists=false" >> $GITHUB_ENV

      - name: Stop if App Already Exists
        if: env.app_exists == 'true'
        run: |
          echo "🚫 The app '${{ env.app_name }}' already exists in another environment. No changes will be made."
          exit 0

      - name: Determine Selected Templates (Remove Duplicates)
        if: env.app_exists == 'false'
        run: |
          case "${{ github.event.inputs.predefined_option }}" in
            "Option1") PRESET_FILES="ref1.txt ref5.txt" ;;
            "Option2") PRESET_FILES="ref2.txt ref3.txt" ;;
            "Option3") PRESET_FILES="ref4.txt" ;;
          esac

          # Add manual templates if provided
          MANUAL_FILES="${{ github.event.inputs.manual_templates }}"

          # Merge and remove duplicates
          UNIQUE_FILES=$(echo -e "$PRESET_FILES\n$MANUAL_FILES" | tr ',' '\n' | sort -u | grep -v '^$' | tr '\n' ',' | sed 's/,$//')

          echo "files=$UNIQUE_FILES" >> $GITHUB_ENV
          echo "Final selected files: $UNIQUE_FILES"

      - name: Create New Branch
        if: env.app_exists == 'false'
        run: |
          git checkout -b "${{ env.branch_name }}"

      - name: Create App Folder and Copy Files
        if: env.app_exists == 'false'
        run: |
          mkdir -p "${{ env.app_path }}"
          IFS=',' read -ra FILES <<< "$files"
          OUTPUT_FILE="copied_files.txt"
          > $OUTPUT_FILE  # Clear output file

          for file in "${FILES[@]}"; do
            FILE_PATH="example/$file"
            if [[ -f "$FILE_PATH" ]]; then
              cp "$FILE_PATH" "${{ env.app_path }}/"
              echo "$file" >> $OUTPUT_FILE
            else
              echo "⚠️ Warning: $FILE_PATH does not exist, skipping."
            fi
          done

      - name: Read Copied Files List
        if: env.app_exists == 'false'
        run: |
          COPIED_FILES=$(cat copied_files.txt || echo "No files copied")
          echo "copied_files=$COPIED_FILES" >> $GITHUB_ENV

      - name: Commit and Push Changes
        if: env.app_exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Created folder ${{ env.app_path }} with selected templates" || echo "No changes to commit"
          git push origin "${{ env.branch_name }}"

      - name: Provide PR Link and File Summary
        if: env.app_exists == 'false'
        run: |
          echo "## 🎉 New Branch Created!" >> $GITHUB_STEP_SUMMARY
          echo "Branch: ${{ env.branch_name }}" >> $GITHUB_STEP_SUMMARY
          echo "[Create a Pull Request](https://github.com/${{ github.repository }}/compare/main...${{ env.branch_name }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📂 Files Created in '${{ env.app_path }}':" >> $GITHUB_STEP_SUMMARY
          echo "```\n$(cat copied_files.txt)```" >> $GITHUB_STEP_SUMMARY
